<?xml version="1.0" encoding="UTF-8" ?>
<Module>
  <ModulePrefs 
     title="__MSG_title__"
     description="__MSG_description__"
     height="40"
     author="__MSG_author__"
     author_email="me@peko.me"
     screenshot="https://raw2.github.com/ailove-lab/Ailove-GoogleCalendar/master/img/screenshot.png"
     thumbnail="https://raw2.github.com/ailove-lab/Ailove-GoogleCalendar/master/img/thumbnail.png">
    <Require feature="dynamic-height"/>
    <Require feature="google.calendar-0.5"/>
    <Require feature="google.calendar-0.5.read"/>
	<Require feature="locked-domain"/>
    <Locale messages="https://raw2.github.com/ailove-lab/Ailove-GoogleCalendar/master/ALL_ALL.xml"/>
  </ModulePrefs>
  <Content type="html">
  <![CDATA[<div id='main'>__MSG_readingCalendar__</div><script>// Generated by CoffeeScript 1.7.1
var eventsCallback, millisecondsToHours, prefs, rangeDuration, rangeIntersection, rangeToJs, visibleDatesJs;

millisecondsToHours = function(a) {
  return Math.round(a / 1e3 / 60 / 30) / 2;
};

rangeToJs = function(a) {
  return {
    startTime: google.calendar.utils.toDate(a.startTime),
    endTime: google.calendar.utils.toDate(a.endTime)
  };
};

rangeDuration = function(a) {
  return a.endTime - a.startTime;
};

rangeIntersection = function(a, b) {
  return {
    startTime: (a.startTime > b.startTime ? a.startTime : b.startTime),
    endTime: (a.endTime < b.endTime ? a.endTime : b.endTime)
  };
};

eventsCallback = function(a) {
  var b, d, f, h, k, tag;
  console.log(a);
  b = {};
  d = 0;
  k = "";
  f = 0;
  a.forEach(function(c) {
    return c.events.forEach(function(e) {
      var g, i;
      if (!e.allDay) {
        g = rangeDuration(rangeIntersection(visibleDatesJs, rangeToJs(e)));
        f += g;
        i = /^tags: ?((?:.*, ?)*.*)$/m.exec(e.details);
        if (!i) {
          d += g;
          return k += e.title + " ";
        }
      }
    });
  });
  a = "<table width=\"100%\" style=\"font-size:smaller\"><tr style=\"background: #e8eef7\"><th>" + prefs.getMsg("Tag") + "</th><th>" + prefs.getMsg("Hours") + "</th><th>%</th></tr>";
  h = [];
  for (tag in b) {
    h.push({
      tag: tag,
      count: b[tag]
    });
  }
  h.sort(function(c, e) {
    return e.count - c.count;
  });
  a += h.map(function(c) {
    return "<tr><td>" + c.tag + "</td><td align=\"right\">" + millisecondsToHours(c.count) + "</td><td align=\"right\">" + Math.round(100 * c.count / f) + "%</td></tr>";
  }).join("");
  if (d) {
    a += "<tr style=\"color: red\"><td>untagged</td><td align=\"right\">" + millisecondsToHours(d) + "</td><td align=\"right\">" + Math.round(100 * d / f) + "%</td></tr>";
  }
  a += "<tr style=\"background: #e8eef7\"><th>" + prefs.getMsg("Total") + "</th><th align=\"right\">" + millisecondsToHours(f) + "</th><th>100%</th></tr></table>";
  a += "<center style=\"font-size:xx-small\">&copy;" + (new Date).getFullYear() + " <a href=\"http://www.TheProductivityGame.com/TimeTracker\" target=\"_blank\">The Productivity Game</a></center>";
  document.getElementById("main").innerHTML = a;
  return gadgets.window.adjustHeight();
};

prefs = new gadgets.Prefs;

visibleDatesJs = void 0;

gadgets.util.registerOnLoadHandler(function() {
  var a, b;
  a = function() {
    return b && google.calendar.read.getEvents(eventsCallback, "selected", b.startTime, b.endTime, {
      requestedFields: ["details"]
    });
  };
  b = void 0;
  google.calendar.subscribeToDates(function(d) {
    b = d;
    b.endTime.date++;
    visibleDatesJs = rangeToJs(b);
    return a();
  });
  return google.calendar.subscribeToDataChange(a);
});
</script>]]></Content></Module>
